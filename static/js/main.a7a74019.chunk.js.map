{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currTab","find","id","className","map","title","content","classNames","href","onClick","App","useState","setSelectedTabId","tab","ReactDOM","render","document","getElementById"],"mappings":"8LAWaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAUH,EAAKI,MAAK,qBAAGC,KAAgBJ,MAAkBD,EAAK,GAEpE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,YAA6B,IAA1BF,EAAyB,EAAzBA,GAAIG,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACtB,OACE,oBACEH,UAAWI,IACT,CAAE,YAAaL,IAAOF,EAAQE,KAGhC,UAAQ,MALV,SAQE,mBACEM,KAAI,WAAMN,GACV,UAAQ,UACRO,QAAS,WACHX,IAAkBI,GACpBH,EAAc,CAAEG,KAAIG,QAAOC,aALjC,SASGD,KAbEH,UAqBf,qBACEC,UAAU,QACV,UAAQ,aAFV,SAIGH,EAAQM,cC9CJT,G,kBAAO,CAClB,CAAEK,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,iBAG7BI,EAAgB,WAC3B,MAA0CC,mBAASd,EAAK,GAAGK,IAA3D,mBAAOJ,EAAP,KAAsBc,EAAtB,KACMZ,EAAUH,EAAKI,MAAK,SAAAY,GAAG,OAAIA,EAAIX,KAAOJ,KAO5C,OACE,sBAAKK,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBH,GAAWA,EAAQK,SAGzC,cAAC,EAAD,CACER,KAAMA,EACNC,cAAeA,EACfC,cAfY,SAACc,GACbA,EAAIX,KAAOJ,GACbc,EAAiBC,EAAIX,WCf3BY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a7a74019.chunk.js","sourcesContent":["import React from 'react'\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\n\ntype Props = {\n    tabs: Tab[],\n    selectedTabId: string,\n    onTabSelected: (tab: { id: string, title: string, content: string, }) => void,\n  };\n  \nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currTab = tabs.find(({ id }) => id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(({ id, title, content }) => {\n            return (\n              <li\n                className={classNames(\n                  { 'is-active': id === currTab.id },\n                )}\n                key={id}\n                data-cy=\"Tab\"\n              >\n\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (selectedTabId !== id) {\n                      onTabSelected({ id, title, content });\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div\n        className=\"block\"\n        data-cy=\"TabContent\"\n      >\n        {currTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const currTab = tabs.find(tab => tab.id === selectedTabId);\n  const handleTab = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      setSelectedTabId(tab.id);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${currTab && currTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}